---
apiVersion: v1
kind: Service
metadata:
  name: {{ name }}
  namespace: {{ namespace }}
spec:
  type: ClusterIP
  ports:
    - port: {{ port }}
      targetPort: {{ port }}
  selector:
    app: {{ name }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ name }}
  namespace: {{ namespace }}
spec:
  replicas: {{ replica }}
  selector:
    matchLabels:
      app: {{ name }}
  template:
    metadata:
      labels:
        app: {{ name }}
        name: {{ name }}
    spec:
      imagePullSecrets:
        - name: {{ imagePullSecret }}
      containers:
        - name: {{ name }}
          image: {{ image }}
          resources:
            limits:
              cpu: {{ cpu.max}}
              memory: {{ memory.max}}
            requests:
              cpu: {{ cpu.min}}
              memory: {{ memory.min}}
          livenessProbe:
            httpGet:
              path: {{ healthCheckPath }}
              port: {{ port }}
            initialDelaySeconds: 5
            failureThreshold: 5
            periodSeconds: 5
          ports:
            - name: http
              containerPort: {{ port }}
          {% if env  is defined -%}
          env:
            {% for key, value in env.items()  -%}
            - name: {{ key }}
              value: "{{ value }}"
            {% endfor -%}
          {% endif %}

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ name }}-cs-ingress
  namespace: {{ namespace }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: >
      chunked_transfer_encoding off; proxy_cache_bypass $http_upgrade;
      proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for; add_header
      X-Content-Type-Options "nosniff"; add_header X-Xss-Protection "1;
      mode=block";   
    nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
    {% if ingress.annotations  is defined -%}
    {% for key, value in ingress.annotations.items()  -%}
    {{ key }}: "{{ value }}"
    {% endfor -%}
    {% endif %}

spec:
  tls:
  {% for item in ingress %}
    - hosts:
      - {{ item.hostname }}
      secretName: {{ item.secretName }}
  {% endfor %}
    
  rules:
    {% for item in ingress %}
    - host: {{ item.hostname }}
      http:
        paths:
          {% for path in item.paths %}
          - path: {{ path }}
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ name }}
                port:
                  number: {{ port }}
          {% endfor %}
    {% endfor %}

